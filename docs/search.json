[
  {
    "objectID": "herbert_catchment_heatmap.html",
    "href": "herbert_catchment_heatmap.html",
    "title": "Water Hot Plot: Fine-Scale Water Quality Visualization with Plotnine",
    "section": "",
    "text": "I am pleased to submit this Quarto document for the 2024 Plotnine competition. This visualization demonstrates the capabilities of Plotnine in creating compelling and informative data representations."
  },
  {
    "objectID": "herbert_catchment_heatmap.html#introduction",
    "href": "herbert_catchment_heatmap.html#introduction",
    "title": "Water Hot Plot: Fine-Scale Water Quality Visualization with Plotnine",
    "section": "",
    "text": "I am pleased to submit this Quarto document for the 2024 Plotnine competition. This visualization demonstrates the capabilities of Plotnine in creating compelling and informative data representations."
  },
  {
    "objectID": "herbert_catchment_heatmap.html#visualization-approach",
    "href": "herbert_catchment_heatmap.html#visualization-approach",
    "title": "Water Hot Plot: Fine-Scale Water Quality Visualization with Plotnine",
    "section": "Visualization Approach",
    "text": "Visualization Approach\nI’ve adapted a successful visualization concept I had originally developed in R using ggplot2, translating and enhancing it with Plotnine. While I initially explored using a ridgeline plot for data concentration visualization, I discovered that a heatmap implementation in Plotnine yielded surprisingly effective results, surpassing my expectations from earlier attempts."
  },
  {
    "objectID": "herbert_catchment_heatmap.html#data-source-and-description",
    "href": "herbert_catchment_heatmap.html#data-source-and-description",
    "title": "Water Hot Plot: Fine-Scale Water Quality Visualization with Plotnine",
    "section": "Data Source and Description",
    "text": "Data Source and Description\nThe visualization is based on fine-scale water quality monitoring data from the Queensland Government Department of Environment, Science and Innovation (DESI). Specifically, it utilizes data from the Lower Herbert catchment near Ingham, Queensland, Australia.\nKey data characteristics:\n\nSource: Water Quality and Investigations team, DESI\nCoverage: 17 in-situ nitrate (as N) sensors\nSensor read frequency: 15-minute intervals\nDate Range: 2020 - 2024\nAggregation: Monthly, across all monitoring sites\n\nFor more information on fine-scale water quality monitoring in Queensland, please refer to the Queensland Governments Publications."
  },
  {
    "objectID": "herbert_catchment_heatmap.html#data-import-and-preparation",
    "href": "herbert_catchment_heatmap.html#data-import-and-preparation",
    "title": "Water Hot Plot: Fine-Scale Water Quality Visualization with Plotnine",
    "section": "Data Import and Preparation",
    "text": "Data Import and Preparation\nData comes from DESI’s Water Quality and Investigations monitoring network for the lower Herbert catchment near Ingham, Queensland. The network includes 17 in-situ nitrate sensors reading every 15 minutes since 2020. Due to remote deployment challenges, sensor uptime varies. Data from 2020-2024 across all sites was extracted and provides sufficient coverage to attain monthly data summaries for each monitoring site.\n\n\nCode\nimport pandas as pd\nfrom datetime import datetime\nfrom plotnine import *\n\n#import concentration data\ndf = pd.read_csv('data/catchment_NNO3_all.csv')\ndf.head()\n\n\n\n\n\n\n\n\n\nGSnum\nname\nts\nValue\nQuality\n\n\n\n\n0\n1160116\nCatherina Creek at Catherina Creek Road\n2020-12-27T00:00:00Z\n0.142\n1\n\n\n1\n1160116\nCatherina Creek at Catherina Creek Road\n2020-12-27T00:15:00Z\n0.153\n1\n\n\n2\n1160116\nCatherina Creek at Catherina Creek Road\n2020-12-27T00:30:00Z\n0.133\n1\n\n\n3\n1160116\nCatherina Creek at Catherina Creek Road\n2020-12-27T00:45:00Z\n0.129\n1\n\n\n4\n1160116\nCatherina Creek at Catherina Creek Road\n2020-12-27T01:00:00Z\n0.130\n1\n\n\n\n\n\n\n\nSite-specific metadata provides context for the site locations and the site ‘types’ to help understand drivers for the installations.\n\nSite types are categorized as:\n\nReference: Situated in the upper catchment above contaminant sources, intended to provide a natural baseline.\nImpact: Located directly downstream of land-use types known to contribute to nutrient to the waterways (ie. agriculture/urban land use)\nEnd-of-system: Located at the most seaward practical monitoring point along the river or creek. The intent is to capture the maximum extent of upstream land use while avoiding the complexities of monitoring in the estuary.\n\n\n\n\nCode\n#import site information\nsitelist = pd.read_csv('data/sitelist.csv')\nsitelist.head()\n\n\n\n\n\n\n\n\n\nBasin\nCatchment\nGSnum\nSite name\nSite code\nLatitude (GDA2020)\nLongitude (GDA2020)\nSite type\nStream order\nStream habit\n\n\n\n\n0\nHerbert\nHerbert River\n1160115\nBroadwater Creek at Day Use\nBCD\n-18.41633\n145.94393\nReference\n4\nNatural\n\n\n1\nHerbert\nCatherina Creek\n1160116\nCatherina Creek at Catherina Creek Road\nCCC\n-18.59907\n146.23627\nEnd of System\n3\nNatural\n\n\n2\nHerbert\nHerbert River\n1160117\nElphinstone Creek at Copley Road\nECC\n-18.46506\n145.96146\nImpact\n4\nNatural\n\n\n3\nHerbert\nFrancis Creek\n1160118\nFrancis Creek at Weir\nFCW\n-18.76673\n146.13407\nImpact\n5\nEphemeral\n\n\n4\nHerbert\nHerbert River\n1160119\nHerbert River at John Row Bridge\nHRJ\n-18.62831\n146.16486\nEnd of System\n7\nTidal"
  },
  {
    "objectID": "herbert_catchment_heatmap.html#data-joining-and-preprocessing",
    "href": "herbert_catchment_heatmap.html#data-joining-and-preprocessing",
    "title": "Water Hot Plot: Fine-Scale Water Quality Visualization with Plotnine",
    "section": "Data joining and Preprocessing",
    "text": "Data joining and Preprocessing\nIn order to work with these data in Plotnine we must join the data frames to include the nessecary metadata for the visualisations we are wanting. The result is one dataframe that will allow for a simpler integration with the graphics.\n\n\nCode\n# Subset to include only 'GSnum' and 'Value' columns\nsubset_df = df[['GSnum', 'Value']]\n\n# Group by 'GSnum' and calculate the median for the 'Value' and 'Quality' columns\nmedian_summary = subset_df.groupby('GSnum').median().reset_index()\n\n# Rename the 'Value' column to 'median'\nmedian_summary.rename(columns={'Value': 'median'}, inplace=True)\n\n# Perform a left join of the original DataFrame with the median summary DataFrame\nmerged_df = pd.merge(df, median_summary, on='GSnum', how='left')\nmerged_df = pd.merge(merged_df, sitelist[['GSnum', 'Site type', 'Site code']], on='GSnum', how='left')\n\n# Concatenate columns with separator\nmerged_df['combined_col'] = merged_df['Site type'] + ' // ' + merged_df['Site code']"
  },
  {
    "objectID": "herbert_catchment_heatmap.html#date-parsing-and-monthly-aggregation",
    "href": "herbert_catchment_heatmap.html#date-parsing-and-monthly-aggregation",
    "title": "Water Hot Plot: Fine-Scale Water Quality Visualization with Plotnine",
    "section": "Date Parsing and Monthly Aggregation",
    "text": "Date Parsing and Monthly Aggregation\nThe data needs to be aggregated by month. A seperate column has been created to allow for ‘prettier’ month names for the plot.\n\n\nCode\n# Parse the 'Date' column from the timestamp\nmerged_df['ts'] = pd.to_datetime(merged_df['ts'])\n\n# Group by month and calculate median of 'Value' column\nmonthly_median = merged_df.groupby([merged_df['ts'].dt.month, 'name', 'combined_col'])['Value'].max()\n\n# Convert the Series to a DataFrame\ndf = monthly_median.reset_index(name='value')\n\n# Create a list of month names\nmonth_names = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']\n\n# Map the month numbers to month names\ndf['month_name'] = df['ts'].apply(lambda x: month_names[x-1])\ndf\n\n\n\n\n\n\n\n\n\nts\nname\ncombined_col\nvalue\nmonth_name\n\n\n\n\n0\n1\nBroadwater Creek at Day Use\nReference // BCD\n0.067\nJan\n\n\n1\n1\nCatherina Creek at Catherina Creek Road\nEnd of System // CCC\n3.072\nJan\n\n\n2\n1\nElphinstone Creek at Copley Road\nImpact // ECC\n1.273\nJan\n\n\n3\n1\nFrancis Creek at Weir\nImpact // FCW\n3.712\nJan\n\n\n4\n1\nHerbert River at John Row Bridge\nEnd of System // HRJ\n0.384\nJan\n\n\n...\n...\n...\n...\n...\n...\n\n\n199\n12\nStone River at Running Creek\nReference // SRR\n0.283\nDec\n\n\n200\n12\nStone River at Venables Crossing\nImpact // SRV\n1.130\nDec\n\n\n201\n12\nTrebonne Creek at Bruce Highway\nImpact // TBH\n5.603\nDec\n\n\n202\n12\nWaterview Creek at Jourama Road\nReference // WCJ\n0.282\nDec\n\n\n203\n12\nWaterview Creek at Mammarellas Road\nEnd of System // WCM\n1.481\nDec\n\n\n\n\n204 rows × 5 columns"
  },
  {
    "objectID": "data/herbert_catchment_joy_plot.html",
    "href": "data/herbert_catchment_joy_plot.html",
    "title": ".",
    "section": "",
    "text": "import pandas as pd\nfrom datetime import datetime\nfrom plotnine import *\n\n\n# Set variables:\nNIWA_MD = 2.4 \nWQO = 0.14\n\n\n#import concentration data\ndf = pd.read_csv('data/catchment_NNO3_all.csv')\ndf.head()\n\n\n\n\n\n\n\n\nGSnum\nname\nts\nValue\nQuality\n\n\n\n\n0\n1160116\nCatherina Creek at Catherina Creek Road\n2020-12-27T00:00:00Z\n0.142\n1\n\n\n1\n1160116\nCatherina Creek at Catherina Creek Road\n2020-12-27T00:15:00Z\n0.153\n1\n\n\n2\n1160116\nCatherina Creek at Catherina Creek Road\n2020-12-27T00:30:00Z\n0.133\n1\n\n\n3\n1160116\nCatherina Creek at Catherina Creek Road\n2020-12-27T00:45:00Z\n0.129\n1\n\n\n4\n1160116\nCatherina Creek at Catherina Creek Road\n2020-12-27T01:00:00Z\n0.130\n1\n\n\n\n\n\n\n\n\n#import site information\nsitelist = pd.read_csv('data/sitelist.csv')\nsitelist.head()\n\n\n\n\n\n\n\n\nBasin\nCatchment\nGSnum\nSite name\nSite code\nLatitude (GDA2020)\nLongitude (GDA2020)\nSite type\nStream order\nStream habit\n\n\n\n\n0\nHerbert\nHerbert River\n1160115\nBroadwater Creek at Day Use\nBCD\n-18.41633\n145.94393\nReference\n4\nNatural\n\n\n1\nHerbert\nCatherina Creek\n1160116\nCatherina Creek at Catherina Creek Road\nCCC\n-18.59907\n146.23627\nEnd of System\n3\nNatural\n\n\n2\nHerbert\nHerbert River\n1160117\nElphinstone Creek at Copley Road\nECC\n-18.46506\n145.96146\nImpact\n4\nNatural\n\n\n3\nHerbert\nFrancis Creek\n1160118\nFrancis Creek at Weir\nFCW\n-18.76673\n146.13407\nImpact\n5\nEphemeral\n\n\n4\nHerbert\nHerbert River\n1160119\nHerbert River at John Row Bridge\nHRJ\n-18.62831\n146.16486\nEnd of System\n7\nTidal\n\n\n\n\n\n\n\n\n\n# Subset to include only 'GSnum' and 'Value' columns\nsubset_df = df[['GSnum', 'Value']]\n# Group by 'GSnum' and calculate the median for the 'Value' and 'Quality' columns\nmedian_summary = subset_df.groupby('GSnum').median().reset_index()\n# Rename the 'Value' column to 'median'\nmedian_summary.rename(columns={'Value': 'median'}, inplace=True)\n# Perform a left join of the original DataFrame with the median summary DataFrame\nmerged_df = pd.merge(df, median_summary, on='GSnum', how='left')\n\nmerged_df = pd.merge(merged_df, sitelist[['GSnum', 'Site type', 'Site code']], on='GSnum', how='left')\n# Concatenate columns with separator\nmerged_df['combined_col'] = merged_df['Site type'] + ' // ' + merged_df['Site code']\nmerged_df.head()\n\n\n\n\n\n\n\n\nGSnum\nname\nts\nValue\nQuality\nmedian\nSite type\nSite code\ncombined_col\n\n\n\n\n0\n1160116\nCatherina Creek at Catherina Creek Road\n2020-12-27T00:00:00Z\n0.142\n1\n0.098\nEnd of System\nCCC\nEnd of System // CCC\n\n\n1\n1160116\nCatherina Creek at Catherina Creek Road\n2020-12-27T00:15:00Z\n0.153\n1\n0.098\nEnd of System\nCCC\nEnd of System // CCC\n\n\n2\n1160116\nCatherina Creek at Catherina Creek Road\n2020-12-27T00:30:00Z\n0.133\n1\n0.098\nEnd of System\nCCC\nEnd of System // CCC\n\n\n3\n1160116\nCatherina Creek at Catherina Creek Road\n2020-12-27T00:45:00Z\n0.129\n1\n0.098\nEnd of System\nCCC\nEnd of System // CCC\n\n\n4\n1160116\nCatherina Creek at Catherina Creek Road\n2020-12-27T01:00:00Z\n0.130\n1\n0.098\nEnd of System\nCCC\nEnd of System // CCC\n\n\n\n\n\n\n\n\nmerged_df.info()\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 765851 entries, 0 to 765850\nData columns (total 9 columns):\n #   Column        Non-Null Count   Dtype  \n---  ------        --------------   -----  \n 0   GSnum         765851 non-null  int64  \n 1   name          765851 non-null  object \n 2   ts            765851 non-null  object \n 3   Value         765851 non-null  float64\n 4   Quality       765851 non-null  int64  \n 5   median        765851 non-null  float64\n 6   Site type     765851 non-null  object \n 7   Site code     765851 non-null  object \n 8   combined_col  765851 non-null  object \ndtypes: float64(2), int64(2), object(5)\nmemory usage: 52.6+ MB\n\n\n\n# Parse the 'Date' column from the timestamp\nmerged_df['ts'] = pd.to_datetime(merged_df['ts'])\n\n# Group by month and calculate median of 'Value' column\nmonthly_median = merged_df.groupby([merged_df['ts'].dt.month, 'name', 'combined_col'])['Value'].max()\nmonthly_median.head()\n\nts  name                                     combined_col        \n1   Broadwater Creek at Day Use              Reference // BCD        0.067\n    Catherina Creek at Catherina Creek Road  End of System // CCC    3.072\n    Elphinstone Creek at Copley Road         Impact // ECC           1.273\n    Francis Creek at Weir                    Impact // FCW           3.712\n    Herbert River at John Row Bridge         End of System // HRJ    0.384\nName: Value, dtype: float64\n\n\n\n\n\ndf\n\n\n\n\n\n\n\n\nts\nname\ncombined_col\nvalue\n\n\n\n\n0\n1\nBroadwater Creek at Day Use\nReference // BCD\n0.067\n\n\n1\n1\nCatherina Creek at Catherina Creek Road\nEnd of System // CCC\n3.072\n\n\n2\n1\nElphinstone Creek at Copley Road\nImpact // ECC\n1.273\n\n\n3\n1\nFrancis Creek at Weir\nImpact // FCW\n3.712\n\n\n4\n1\nHerbert River at John Row Bridge\nEnd of System // HRJ\n0.384\n\n\n...\n...\n...\n...\n...\n\n\n199\n12\nStone River at Running Creek\nReference // SRR\n0.283\n\n\n200\n12\nStone River at Venables Crossing\nImpact // SRV\n1.130\n\n\n201\n12\nTrebonne Creek at Bruce Highway\nImpact // TBH\n5.603\n\n\n202\n12\nWaterview Creek at Jourama Road\nReference // WCJ\n0.282\n\n\n203\n12\nWaterview Creek at Mammarellas Road\nEnd of System // WCM\n1.481\n\n\n\n\n204 rows × 4 columns\n\n\n\n\n# Convert the Series to a DataFrame\ndf = monthly_median.reset_index(name='value')\n# Create a list of month names\nmonth_names = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec']\n\n# Map the month numbers to month names\ndf['month_name'] = df['ts'].apply(lambda x: month_names[x-1])\ndf\n\n\n\n\n\n\n\n\nts\nname\ncombined_col\nvalue\nmonth_name\n\n\n\n\n0\n1\nBroadwater Creek at Day Use\nReference // BCD\n0.067\nJan\n\n\n1\n1\nCatherina Creek at Catherina Creek Road\nEnd of System // CCC\n3.072\nJan\n\n\n2\n1\nElphinstone Creek at Copley Road\nImpact // ECC\n1.273\nJan\n\n\n3\n1\nFrancis Creek at Weir\nImpact // FCW\n3.712\nJan\n\n\n4\n1\nHerbert River at John Row Bridge\nEnd of System // HRJ\n0.384\nJan\n\n\n...\n...\n...\n...\n...\n...\n\n\n199\n12\nStone River at Running Creek\nReference // SRR\n0.283\nDec\n\n\n200\n12\nStone River at Venables Crossing\nImpact // SRV\n1.130\nDec\n\n\n201\n12\nTrebonne Creek at Bruce Highway\nImpact // TBH\n5.603\nDec\n\n\n202\n12\nWaterview Creek at Jourama Road\nReference // WCJ\n0.282\nDec\n\n\n203\n12\nWaterview Creek at Mammarellas Road\nEnd of System // WCM\n1.481\nDec\n\n\n\n\n204 rows × 5 columns\n\n\n\n\n(\n    ggplot(df, aes(x='ts', y='combined_col', fill='value')) +\n    geom_tile(aes(width=0.95, height=0.95)) +\n    theme_dark(base_size=11, base_family=None) +\n    geom_text(aes(label=\"value.round(2).astype(str)\"), size=6, color='#DDDEDF', show_legend=False) +\n    #scale_color_manual([\"white\", \"black\"]) +\n    scale_fill_cmap(cmap_name=\"inferno\", name=\"Max Monthly Nitrate-N Concentration (mg/L)\") +\n    #scale_fill_gradient(cmap_name=\"viridis\", low=\"#3BC4A4\", high=\"#CC334E\") +  # Adjust low and high colors as needed\n    scale_x_continuous(breaks=range(1, 13), labels=month_names, name=\"\") +\n    scale_y_discrete(name=\"Site type and ID\") +  # Change y-axis label\n    theme(axis_text_x=element_text(angle=30, hjust=1.5),\n          legend_position='top',  # Move legend to the top\n          legend_direction='horizontal')  # Horizontal orientation of legend\n)\n\n\n\n\n\n\n\n\nThis graph displays the maximum monthly Nitrate-N concentration (measured in mg/L) for various sites over a year. Here are some key observations:\n\nThe data is organized by site type and ID on the y-axis, with months on the x-axis.\nSite types are categorized as Reference, Impact, and End of System.\nThe concentration values are represented by both numbers and a color scale, with darker colors indicating lower concentrations and brighter colors (yellow) indicating higher concentrations.\nGenerally, the Impact and End of System sites show higher nitrate concentrations compared to Reference sites.\nSome sites, particularly Impact sites like TBH, FCW, and LCL, show very high concentrations (above 4 mg/L) in certain months.\nThere’s considerable variation both across sites and across months for individual sites.\nThe highest recorded concentration appears to be 6.96 mg/L at the End of System // CCC site in December.\nReference sites generally maintain lower concentrations throughout the year.\nSome sites show clear seasonal patterns, while others have more sporadic high concentration months.\n\nThis graph allows for comparison of nitrate levels across different types of sites and seasons, which could be useful for environmental monitoring or water quality assessment."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": ".",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  }
]